{"version":3,"sources":["components/Greetings.js","components/Card.js","api/weather.js","App.js","index.js"],"names":["Greetings","useState","greeting","setGreeting","useEffect","time","Date","getHours","className","Card","setWeather","weather","onMouseDown","name","alt","sys","country","src","Math","round","main","temp","icon","description","API_KEY","process","REACT_APP_OPEN_WEATHER_API_KEY","fetchWeather","location","axios","get","params","q","units","APPID","then","res","data","catch","err","toast","error","App","loading","setLoading","setLocation","handleSearch","e","a","key","type","value","onChange","target","onKeyPress","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA0BeA,EAxBG,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACfC,EADe,KACLC,EADK,KAiBtB,OAdAC,qBAAU,WACR,IACMC,GAAO,IAAIC,MAAOC,WASxBJ,EARSE,EAAO,GAAM,sBAAyBA,EAAO,GAAM,kBAAoB,kBAS/E,IAGD,yBAAKG,UAAU,YACb,4BAAKN,KCEIO,EArBF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QACzB,OACE,0BAAMH,UAAU,eAAeI,YAAa,kBAAMF,EAAW,MACxD,yBAAKF,UAAU,oBACb,8BAAOG,EAAQE,MACf,8BACA,yBACEC,IAAKH,EAAQI,IAAIC,QACjBC,IAAG,iEAA4DN,EAAQI,IAAIC,QAAxE,YAGP,yBAAKR,UAAU,uBACZU,KAAKC,MAAMR,EAAQS,KAAKC,MACzB,uCAEF,yBAAKb,UAAU,eAAeS,IAAG,4CAAuCN,EAAQA,QAAQ,GAAGW,KAA1D,WAAyER,IAAKH,EAAQA,QAAQ,GAAGY,cAClI,uBAAGf,UAAU,mBAAmBG,EAAQA,QAAQ,GAAGY,e,iBCdtDC,EAAUC,+HAAYC,+BAEfC,EAAe,SAAAC,GAAQ,OAAIC,IAAMC,IAHlC,kDAG2C,CACnDC,OAAQ,CACNC,EAAGJ,EACHK,MAAO,SACPC,MAAOV,KAERW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GAAG,OAAIC,IAAMC,MAAN,4CAAiDb,EAAjD,uB,MC4BHc,MAjCf,WAAgB,IAAD,EACiBzC,oBAAS,GAD1B,mBACN0C,EADM,KACGC,EADH,OAEmB3C,mBAAS,IAF5B,mBAEN2B,EAFM,KAEIiB,EAFJ,OAGiB5C,mBAAS,IAH1B,mBAGNU,EAHM,KAGGD,EAHH,KAKPoC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACL,UAAVD,EAAEE,IADa,uBAEjBL,GAAW,GACXC,EAAY,IACZnC,EAAW,IAJM,SAKCiB,EAAaC,GALd,OAKXQ,EALW,OAMjB1B,EAAW0B,GACXQ,GAAW,GAPM,2CAAH,sDAWlB,OACE,yBAAKpC,UAAU,iBACb,yBAAKA,UAAU,0BACf,kBAAC,EAAD,MACA,2BACE0C,KAAK,OACL1C,UAAU,eACV2C,MAAOvB,EACPwB,SAAU,SAACL,GAAD,OAAOF,EAAYE,EAAEM,OAAOF,QACtCG,WAAY,SAACP,GAAD,OAAOD,EAAaC,IAChCQ,YAAaZ,EAAU,gBAAkB,uBAE1ChC,GAAWA,EAAQS,MAAQ,kBAAC,EAAD,CAAMV,WAAYA,EAAYC,QAASA,MC5BzE6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.78397d07.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Greetings = () => {\n  const [greeting, setGreeting] = useState('');\n\n  useEffect(() => {\n    let greet;\n    const time = new Date().getHours();\n    greet = (time < 10) ? \"Hello! Good morning\" : (time < 20) ? \"Hello. Good day\" : \"Good evening\";\n    // if (time < 10) {\n    //   greet = \"Hello! Good morning\";\n    // } else if (time < 20) {\n    //   greet = \"Hello. Good day\";\n    // } else {\n    //   greet = \"Good evening\";\n    // }\n    setGreeting(greet);\n  }, [])\n\n  return (\n    <div className=\"greeting\">\n      <h1>{greeting}</h1>\n    </div>\n  );\n}\n\nexport default Greetings;\n","import React from 'react';\n\nconst Card = ({setWeather, weather}) => {\n  return (\n    <span className=\"weather-card\" onMouseDown={() => setWeather([])}>\n         <div className=\"weather-location\">\n           <span>{weather.name}</span>\n           <span>\n           <img\n             alt={weather.sys.country}\n             src={`http://catamphetamine.gitlab.io/country-flag-icons/3x2/${weather.sys.country}.svg`}/>\n           </span>\n         </div>\n         <div className=\"weather-temperature\">\n           {Math.round(weather.main.temp)}\n           <sup>&deg;C</sup>\n         </div>\n         <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n         <p className=\"weather-summary\">{weather.weather[0].description}</p>\n    </span>\n  );\n}\n\nexport default Card;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\n\nexport const fetchWeather = location => axios.get(URL, {\n    params: {\n      q: location,\n      units: 'metric',\n      APPID: API_KEY,\n    }\n  }).then(res => res.data)\n    .catch(err => toast.error(`Ooops! Could'nt find place called ${location} ðŸ˜“.`));\n","import React, { useState } from 'react';\nimport Greetings from './components/Greetings';\nimport Card from './components/Card';\n\nimport { fetchWeather } from './api';\n\nimport './App.css';\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [location, setLocation] = useState('');\n  const [weather, setWeather] = useState([]);\n\n  const handleSearch = async (e) => {\n    if (e.key === 'Enter') {\n      setLoading(true);\n      setLocation('');\n      setWeather([]);\n      const res = await fetchWeather(location);\n      setWeather(res);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-container-overlay\" />\n      <Greetings />\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n        onKeyPress={(e) => handleSearch(e)}\n        placeholder={loading ? \"Just a sec...\" : \"Search location...\"}\n        />\n      {weather && weather.main && <Card setWeather={setWeather} weather={weather} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastContainer />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}